{"version":3,"sources":["item.js","component/Itemlist.js","component/Detail.js","component/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","url","ItemList","props","history","useHistory","stock","useContext","stockContext","Provider","value","className","src","item","alt","width","onClick","push","TabContent","useEffect","setTabSwitch","tab","Info","Detail","useParams","useState","none","setNone","setTab","tabSwitch","timer","setTimeout","clearTimeout","DetailAlert","setStock","a","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","connect","state","store","Table","responsive","map","cart","i","name","dispatch","type","quan","React","createContext","App","setItem","more","setMore","Navbar","bg","expand","Brand","as","to","Toggle","aria-controls","Collapse","NavDropdown","href","Divider","exact","path","Jumbotron","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","baseState","createStore","action","copy","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7bb3a51.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id : 0,\r\n      title : \"ABKO(앱코) 오엘라 자동급식기 PF01\",\r\n      content : \"자동급식기\",\r\n      price : '120,000',\r\n      url : 'https://daisy0y.github.io/images/0.jpg'\r\n\r\n      \r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"윈코 코펫 반영구 반려동물 털빠짐 털제거돌돌이\",\r\n      content : \"털제거돌돌이\",\r\n      price : '9,900',\r\n      url : 'https://daisy0y.github.io/images/1.jpg'\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"브라운포 초경량 휴대용 반려동물 애견 유모차\",\r\n      content : \"애견 유모차\",\r\n      price : '69,000',\r\n      url : 'https://daisy0y.github.io/images/2.jpg'\r\n    }\r\n  ] ","import React, { useContext } from 'react';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport {stockContext} from '../App.js'\r\n\r\nfunction ItemList(props){\r\n  let history = useHistory(); \r\n  let stock = useContext(stockContext);\r\n  \r\n  return(\r\n    <stockContext.Provider value={stock}>\r\n      <div className=\"col-md-4\">\r\n        <img className=\"item-image\" src={props.item.url} alt=\"123\" width=\"100%\" \r\n        onClick={()=>{history.push(`/detail/${props.item.id}`)}}/>\r\n        <h4>{props.item.title}</h4>\r\n        <p className=\"list-price\">{props.item.content} {props.item.price}원</p>\r\n        <p> 재고가 <span className=\"item-stock\">{stock[props.item.id]}</span>개 남았어요!! </p>\r\n      </div>\r\n      </stockContext.Provider>\r\n  )\r\n  \r\n    }\r\n\r\nexport default ItemList;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport { Nav} from 'react-bootstrap'\r\nimport '../assets/Detail.scss'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\n\r\nfunction Detail(props) {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let [none,setNone] = useState(true);\r\n    let [tab,setTab] = useState(0);\r\n    let [tabSwitch,setTabSwitch] = useState(false);\r\n    useEffect(()=>{\r\n        let timer = setTimeout(()=>{\r\n           setNone(false)\r\n           return ()=>{clearTimeout(timer)}\r\n        },4000)\r\n    },[])\r\n\r\n    let DetailAlert = <div id=\"a\" className=\"detail-alert\">재고가 얼마 남지 않았습니다!</div>\r\n            \r\n    return(\r\n    <div className=\"container\">\r\n            <div>\r\n                <h4 className=\"detail-header\">Detail</h4>\r\n             \r\n                {none ? DetailAlert : null}\r\n            </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={props.item[id].url} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{props.item[props.item[id].id].title}</h4>\r\n                <p>{props.item[id].content}</p>\r\n                <p>{props.item[id].price}원</p>\r\n               <Info stock={props.stock[id]} setStock={props.setStock}></Info>\r\n                <button className=\"btn btn-success\" onClick={()=>{\r\n                    let a = [...props.stock];\r\n                    a[id] = a[id]-1\r\n                    props.setStock(a)\r\n                \r\n                }}>주문하기</button> \r\n                <button onClick={()=>{\r\n                    history.goBack();\r\n                }} className=\"btn btn-success\">뒤로가기</button> \r\n            </div>\r\n        </div>\r\n\r\n       <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link-0\" onClick={()=>{setTabSwitch(false); setTab(0)}}>상세정보</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link-1\" onClick={()=>{setTabSwitch(false); setTab(1)}}>리뷰</Nav.Link>\r\n            </Nav.Item>\r\n      </Nav>\r\n    \r\n         <CSSTransition in={tabSwitch} classNames=\"tabs\" timeout={1000}>\r\n             <TabContent setTabSwitch={setTabSwitch} tab={tab}></TabContent>\r\n         </CSSTransition>\r\n\r\n    </div>  \r\n    )\r\n}\r\n\r\nfunction TabContent(props){\r\n    useEffect(()=>{\r\n        props.setTabSwitch(true)\r\n    })\r\n    if(props.tab === 0){\r\n        return <div>상품설명란입니다</div>\r\n    } else if(props.tab === 1){\r\n        return <div>리뷰란입니다</div>\r\n    }\r\n}\r\n\r\nfunction Info(props){\r\n    return(\r\n        <p>재고 : {props.stock}</p>\r\n    )\r\n}\r\n\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Table } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction Cart(props){\r\n\r\n    return(\r\n    <>\r\n    <Table responsive=\"sm\">\r\n        <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            {props.store.map((cart,i)=>{\r\n                return(\r\n                       <tr key={i}>\r\n                        <td>{cart.id+1}</td>\r\n                        <td>{cart.name}</td>\r\n                        <td>\r\n                            <span onClick={()=>{props.dispatch({type:'decrease'})}} className=\"cart-sign\"> - </span>\r\n                            {cart.quan}\r\n                            <span onClick={()=>{props.dispatch({type:'increase'})}} className=\"cart-sign\"> + </span></td>\r\n                        <td>여기뭐 넣지</td>\r\n                       </tr>\r\n                       )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n  \r\n</>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nfunction storeToProps(state){\r\n    return {\r\n        store:state\r\n    }\r\n}\r\n\r\nexport default connect(storeToProps)(Cart)\r\n\r\n// export default Cart;\r\n","/*eslint-disable*/\nimport React, { useState , useContext } from 'react';\nimport {Link, Route, Switch} from 'react-router-dom';\nimport {Navbar,NavDropdown,Nav,Button,Jumbotron} from 'react-bootstrap'\nimport './App.css';\nimport Item from './item.js'\nimport ItemList from \"./component/Itemlist\"\nimport Detail from \"./component/Detail.js\"\nimport axios from \"axios\"\nimport Cart from './component/Cart.js'\n\nexport let stockContext = React.createContext();\n\nfunction App() {\n  \n  let [item,setItem] = useState((Item));\n  let [stock,setStock] = useState([10,11,5,5,12,9,10,3,9]);\n  let [more,setMore] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/react-shopping-mall\">봉구의 간식</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/react-shopping-mall\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/Detail/0\">Detail</Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      \n  <Switch>\n        \n      <Route exact path=\"/react-shopping-mall\"> \n            <Jumbotron className=\"background\">\n              <h1>귀여운 , 댕댕이 봉구</h1>\n              <p>\n                봉구가 직접 운영하는 애견용품점입니다\n              </p>\n              {/* <p>\n                <Button variant=\"primary\">Learn more</Button>\n              </p> */}\n            </Jumbotron>\n            <stockContext.Provider value={stock}>\n            <div className=\"container\">\n              \n              <div className=\"row\">\n                { \n                  item.map((item)=>{\n                  return <ItemList key={item.id} item={item}/>\n                })}\n              \n              </div>\n              \n          \n            { more < 1 ? <button onClick={()=>{\n            setMore(more+1)\n            axios.get('https://daisy0y.github.io/more.json')\n            .then((result)=>{\n           setItem([...item ,...result.data])\n\n            })\n            .catch(()=>{})\n\n\n              }} className=\"btn btn-primary\">더보기</button>\n              : null\n\n            }\n            </div>\n            </stockContext.Provider>\n            </Route>\n            <Route path=\"/detail/:id\">\n                <Detail item={item} stock={stock} setStock={setStock}/>\n            </Route>\n            \n            <Route path=\"/cart\">\n              <Cart></Cart>\n            </Route>\n\n  </Switch>\n  \n\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom' ;\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\n\nlet baseState =  [{\n  id:0,\n  name:'ABKO(앱코) 오엘라 자동급식기 PF01',\n  quan:2\n},{\n  id:1,\n  name:'윈코 코펫 반영구 반려동물 털빠짐 털제거돌돌이',\n  quan:1\n},{\n  id:2,\n  name:'브라운포 초경량 휴대용 반려동물 애견 유모차',\n  quan:1\n}]\n\n\nfunction reducer(state = baseState , action){\n  if( action.type==='increase'){\n    let copy = [...state];\n    copy[0].quan++;\n    return copy\n  }else if(action.type==='decrease'){\n    let copy = [...state];\n    copy[0].quan--;\n    if(copy[0].quan < 0 ){\n      alert('최소 갯수 입니다.')\n      copy[0].quan++;\n    }\n    return copy\n  }\n    else{\n    return state\n  }\n}\n\nlet store = createStore(reducer);\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n       <App />\n      </Provider>\n    </BrowserRouter>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}